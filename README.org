* nyc_taxi
This is a [[https://dagster.io/][Dagster]] project scaffolded with
[[https://docs.dagster.io/getting-started/create-new-project][=dagster project scaffold=]].

** Getting started
First, install your Dagster code location as a Python package. By using
the --editable flag, pip will install your Python package in
[[https://pip.pypa.io/en/latest/topics/local-project-installs/#editable-installs]["editable
mode"]] so that as you develop, local code changes will automatically
apply.

#+begin_src sh
pip install -e ".[dev]"
#+end_src

Then, start the Dagster UI web server:

#+begin_src sh
dagster dev
#+end_src

Open http://localhost:3000 with your browser to see the project.

You can start writing assets in =nyc_taxi/assets.py=. The assets are
automatically loaded into the Dagster code location as you define them.

** Development
*** Adding new Python dependencies
You can specify new Python dependencies in =setup.py=.

*** Unit testing
Tests are in the =nyc_taxi_tests= directory and you can run tests using
=pytest=:

#+begin_src sh
pytest nyc_taxi_tests
#+end_src

*** Schedules and sensors
If you want to enable Dagster
[[https://docs.dagster.io/concepts/partitions-schedules-sensors/schedules][Schedules]]
or
[[https://docs.dagster.io/concepts/partitions-schedules-sensors/sensors][Sensors]]
for your jobs, the
[[https://docs.dagster.io/deployment/dagster-daemon][Dagster Daemon]]
process must be running. This is done automatically when you run
=dagster dev=.

Once your Dagster Daemon is running, you can start turning on schedules
and sensors for your jobs.

** Deploy on Dagster Cloud
The easiest way to deploy your Dagster project is to use Dagster Cloud.

Check out the [[https://docs.dagster.cloud][Dagster Cloud
Documentation]] to learn more.
